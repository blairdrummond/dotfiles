BANNER Reminders for %w, %d%s %m, %y%o:


################################################################################
##       Meetings + Reminders         ###
########################################
#


#
################################################################################






# Assignments
REM 2017-08-31@12:00 *1 +30 UNTIL 2017-08-31 MSG Biology Due in %x day%p %2



# Weekly
REM Tuesday   +1 UNTIL 2017-08-31 MSG Reading Group at 5:30pm
REM Wednesday +1 UNTIL 2017-08-24 MSG Undergrad talks at 2pm

## Class
REM Monday    FROM 2017-09-01 +1 UNTIL 2017-12-14 MSG Class at 10   %c
REM Wednesday FROM 2017-09-01 +1 UNTIL 2017-12-14 MSG Class at 8:30 %c


# Monthly
REM 1 +2 AFTER MSG Pay Rent




# Birthdays
REM February 11 +2 MSG Isabel's Birthday
REM October  24 +2 MSG Dad's    Birthday
REM June     12 +2 MSG Mom's    Birthday


















######################################################################
##              EXAMPLES              ###
########################################
## 
## REM ONCE 2017-08-05 MSG Just tell me once!
## 
## 
## REM Jan 1 MSG Remind every year on new years day
## REM January 1 2015 MSG Remind only on new years day 2015
## REM Sunday 2 MSG Remind every second Sunday
## REM March Monday 1 --7 MSG remind on the last Monday of February
## REM December 25 +30 MSG Christmas



######################################################################
##              HOLIDAYS              ###
########################################
#

SET Jan 1
SET Feb 2
SET Mar 3
SET Apr 4
SET May 5
SET Jun 6
SET Jul 7
SET Aug 8
SET Sep 9
SET Oct 10
SET Nov 11
SET Dec 12

SET January   1
SET February  2
SET March     3
SET April     4
SET May       5
SET June      6
SET July      7
SET August    8
SET September 9
SET October   10
SET November  11
SET December  12

SET Quote CHAR(34)

# Handy constants/function for specifing week of month...
SET  Week_1		 1
SET  Week_2		 8
SET  Week_3		15
SET  Week_4		22
FSET _last(mo)		"1 " + MON((mo%12)+1)+" --7"


# Shorthand for commonly used expression...
FSET _trig()		TRIGGER(TRIGDATE())

# Handy function to provide SCANFROM dates...
FSET _back(days)	TRIGGER(TODAY()-days)


OMIT     Jan  1		MSG %"New Year's%" Day
REM      Feb 14		MSG %"Valentine's%" Day
REM      Mar 17		MSG %"St. Patrick's%" Day
REM  Sun Apr  1 ++2	MSG Daylight Savings Time - %"DST starts%" %b
REM      Apr  1		MSG %"April Fool's%" Day
# REM  Mon Tue Wed Thu Fri Sat 15 Apr MSG %"Income tax%" due
REM  Sun May [Week_2]	MSG %"Mother's Day%"
REM      July 1		MSG %"Canada Day%"
REM  Sun Jun [Week_3]	MSG %"Father's Day%"
REM  Mon Sep [Week_1]	SCANFROM [_back(7)] SATISFY 1
			OMIT [_trig()] MSG %"Labor Day%"
REM  Sun [_last(Oct)]	MSG Daylight Savings Time - %"DST over%"
REM      Oct 31		MSG %"Halloween%"
REM  Mon Oct [Week_2]	SCANFROM [_back(7)] SATISFY 1
			OMIT [_trig()] MSG %"Thanksgiving%" (cont.)
OMIT     Dec 24		MSG %"Christmas Eve%"
OMIT     Dec 25		MSG %"Christmas%" Day