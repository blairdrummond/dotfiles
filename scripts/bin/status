#!/bin/sh


email () { ### Email

    if [ -d ~/mail/gmail/ ] && pass email > /dev/null; then
	
	notmuch show --format=json tag:flagged and     tag:urgent 2> /dev/null | jq '.[][0][0].headers | [.Date,.From,.Subject] | @csv' | sed 's/[^"]*,\\"/ ::: /g' | sed 's/\\"//g' | sed 's/^"\(.*\)"$/\1/' | awk '{$1=$6="";$5="\t";print}' | sed "s/^\(................\)//1" | sed "s/:::.*:::/$c1&$c7/1" | sed 's/<.*@.*>//g' | awk -F ':::' '{printf "%-1s%- 23s \n%+ 15s\n\n",$1,$2,$3}' 2> /dev/null | while read line; do
	    notify-send "$line"
	done

    else
	notify-send "not signed in" --urgency critical
    fi
}




date_time () { ### Time
    notify-send --expire-time 30000 "$(date '+%b %e, %l:%M' | awk '{print $1 " " $2 " " $3 " " $4}')"
}




battery ()  { ### Battery
    p=$(acpi --battery | cut -d "," -f 2 | sed 's/[ %]//g')

    if [ $p -le 20 ]; then
	urgency=critical
    else
	urgency=normal
    fi
    batt=$(acpi --battery \
		  | awk '{$1=$2=""; print $0}' \
		  | awk -F "," '{print $1}' \
                  | sed 's/^ *//g')

    test $batt = Full || notify-send "$batt , $p%" --expire-time 30000 --urgency $urgency
}




weather ()  { ### Weather
    rain | while read line; do
	notify-send "$line" --urgency critical
    done
}





wifi ()  { ### Wifi
    wifidev=$(ip link | grep wlp | awk '{print $2}' | sed 's/\://g')
    iwconfig "$wifidev" 2>&1 | grep -q no\ wireless\ extensions\. && {
	echo wired
	exit 0
    }

    stngth=$(iwconfig "$wifidev" | awk -F '=' '/Quality/ {print $2}' | cut -d '/' -f 1)
    after=$(expr $stngth / 10)
    ssid=$(iwconfig "$wifidev" | head -n1 | awk '{print $4}' | cut -d ":" -f 2 | sed 's/"//g')

    # if ! [ $after -ge 1 -a $after -le 10 ]; then
    if [ $after -lt 1 ]; then
        notify-send --expire-time 30000 "no Signal" -u critical
    fi
}




tasks ()  {
    tasks=$(soon 2>/dev/null | tail -n 1 | awk '{print $1}')
    case $tasks in
        1)
            notify-send --expire-time 30000 "1 task"
            ;;
        0)
            echo
            ;;
        *)
            notify-send --expire-time 30000 "$tasks tasks"
            ;;
    esac


}


reminders () {
    remind -oaa '-knotify-send %s &' ~/desk/remind/top.rem
}


todolist () {

    cat ~/desk/todolist |
	while read line; do
	    # notify-send -u critical $line
	    notify-send "$line"
	done
    
}

lock_screen_title () {
    if [ -f /tmp/.painting_name ]; then
        notify-send "$(cat /tmp/.painting_name | sed '1q')"
    fi
}

lock_screen_title &
# reminders &
# sleep 0.4
# todolist &
email &
# weather &
# wifi &
battery &
date_time &
# tasks &
# todo &
