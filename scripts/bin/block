#!/bin/bash

pgrep ffplay && exit 0

xset dpms force on

# font="Noto-Serif-Thin"
font="Crimson-Text-Regular"
color="#a0a0a9"
text_color=white
# font="Bellefair-Regular"

nonunif () {
	# Print the totals
	for d in /mnt/media/paintings/*; do
		yes $d | head -n $(ls "$d" | wc -l | sed 's/^\(.*\)$/sqrt(\1)/' | bc | awk -F '.' '{print $1}')
	done | shuf | shuf | shuf -n 1
}


avgcolor () {
	convert "$1" -resize 1x1 txt: | sed '1d' | awk '{print $3}'
}

avgcolor_negate () {
	convert "$1" -negate -resize 1x1 txt: | sed '1d' | awk '{print $3}'
}


detect_screen_configuration () {

	# Not perfect, but hey

	if xrandr | grep -q "eDP1 connected primary 1920x1080+0+0" && xrandr | grep -q "HDMI1 connected 1920x1080+1920+0"; then
		echo wide
	elif xrandr | grep -q "eDP1 connected primary 1920x1080+0+0" && xrandr | grep -q "HDMI1 connected 1080x1920+1920+0"; then
		echo tall
	else
		echo single
	fi
	
}







# 
# 
# options () {
# 
# 	# Images
# 	{
# 		find /home/blair/desk/cur/paintings/ -type f
# 	} | sed 's/^/image: /'
# 
# 	# Quotes
# 	cd /home/blair/desk/.quotes/
# 	grep -Hv "\(^#\|^$\)" * | sed 's/^/quote: /'
# 
# }

create_lockscreen () {
    filename=$(find "$(nonunif)" -type f | shuf -n 1)

	# frame=$(convert "${filename}" -crop 100x20% -resize 1x1 txt: | sed 1d | awk '{print $3}')
	frame="#efeded"
	# frame=$(convert "${filename}" -resize 1x1 txt: | sed 1d | awk '{print $3}')
	message=$(basename "${filename}")
	message="${message%.*}"

	# color="#$(avgcolor "$filename")"
	# text_color="#$(avgcolor_negate "$filename")"
	[ -f /tmp/.frame-bg.png ] || convert \( -size 1920x1080 xc:"$color" \) \
										 \( -size 1920x1080 tile:"/mnt/media/.noise.png" \) \
										 -compose Overlay \
										 -gravity center \
										 -composite \
										 -format png \
										 -quality 99 \
										 /tmp/.frame-bg.png

	timeout 20 convert -pointsize 10 \
			/tmp/.frame-bg.png \
			-size 1920x1080 \( "$filename" -resize '1632x918>' \) \
			-gravity center \
			-composite \
			-gravity South -font $font -fill "$text_color" -pointsize 25 -annotate +0+25 "$message" \
			-quality 99 \
			/tmp/.lockscreen_left.jpg

	notify-send "$message -- ready"
	echo "$message" > /tmp/.painting_name


	# timeout 10 convert -pointsize 10 \
		# 		-size 1920x1080 \( "$filename" -resize '1632x918>' \) \
		# 		-gravity center \
		# 		-bordercolor "$frame" \
		# 		-background "$frame"  \
		# 		-extent 1920x1080   \
		# 		-gravity South -font $font -pointsize 25 -annotate +0+25 "$message" \
		# 		-quality 95 \
		# 		/tmp/.lockscreen_left.jpg

	configuration=$(detect_screen_configuration)
	
	case $configuration in

		tall)
			# color="#$(avgcolor "$filename")"
			# text_color="#$(avgcolor_negate "$filename")"
			[ -f /tmp/.frame-bg-tall.png ] || convert \( -size 1080x1920 xc:"$color" \) \
													  \( -size 1080x1920 tile:"/mnt/media/.noise.png" \) \
													  -compose Overlay \
													  -gravity center \
													  -composite \
													  -format png \
													  -quality 99 \
													  /tmp/.frame-bg-tall.png

			timeout 20 convert -pointsize 10 \
					/tmp/.frame-bg-tall.png \
					-size 1080x1920 \( "$filename" -resize '918x1632>' \) \
					-gravity center \
					-composite \
					-gravity South -font $font -pointsize 25 -fill "$text_color" -annotate +0+25 "$message" \
					-quality 95 \
					/tmp/.lockscreen_right.jpg

			timeout 20 convert /tmp/.lockscreen_left.jpg -background "$frame" -gravity southeast -splice 0x840 /tmp/.lockscreen_left.jpg 

			timeout 20 convert /tmp/.lockscreen_left.jpg /tmp/.lockscreen_right.jpg +append /tmp/.lockscreen.jpg
			;;

		wide)
			# The monitor is probably just two 1920x1080 screens
			timeout 20 convert /tmp/.lockscreen_left.jpg /tmp/.lockscreen_left.jpg +append /tmp/.lockscreen.jpg
			;;
		
		single)
			mv /tmp/.lockscreen_left.jpg /tmp/.lockscreen.jpg
			;;
	esac
}


case "$1" in
        newlockscreen)
                create_lockscreen
                ;;

	now)
		if ! pgrep slock; then
			mpc pause
			[ -f /tmp/.lockscreen.jpg ] || create_lockscreen
			slock -i /tmp/.lockscreen.jpg zzz
			create_lockscreen
		else
			zzz
		fi
		;;
	
	nosleep)
		if ! pgrep slock; then
			mpc pause
			[ -f /tmp/.lockscreen.jpg ] || create_lockscreen
			slock -i /tmp/.lockscreen.jpg
			create_lockscreen
		fi
		;;
        help)
                echo "newlockscreen | now | nosleep | * | help"
                ;;

	*)
                echo "newlockscreen | now | nosleep | * | help"
		tinympc && exit 0
		if ! pgrep slock; then
			mpc pause
			[ -f /tmp/.lockscreen.jpg ] || create_lockscreen
			slock -i /tmp/.lockscreen.jpg # -t 5 bash -c "sleep 6 && pgrep slock && zzz"
			create_lockscreen
		else
			mpc pause
			zzz
		fi
		;;
esac

xset dpms force on
