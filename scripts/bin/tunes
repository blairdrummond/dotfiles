#!/bin/sh

get_vol () {
    pamixer --get-volume
    # amixer get Master | grep "Mono" | awk '{print $4}' | tail -n1 | sed 's/\[\(.*\)\]/\1/g'
}

print_sound () {
    vol=$(get_vol)
    pamixer --get-mute && notify-send -u low "volume [mute]"  > /dev/null || notify-send -u low -h "int:value:$vol " "volume"
    echo $vol
    [ -n "$DISPLAY" ] && [ -p /tmp/ctrl_panel ] && echo volume >> /tmp/ctrl_panel

}

print_track () {
    #notify-send -t 1 -u low -h "int:value:0" "MPC" "$1"
    echo $1
}


vol () {
    case $1 in
	info)
	    print_sound
	    ;;
	
	inc)
	    amixer sset Speaker mute
	    amixer set  Speaker 0%

	    if test -z $2; then
			#pamixer -i 3
			amixer -D pulse sset Master 3%+
	    else
			#pamixer -i $2
			amixer -D pulse sset Master "${$2}%+"
	    fi
	    print_sound
	    ;;
	dec)
	    amixer sset Speaker mute
	    amixer set  Speaker 0%

	    if test -z $2; then
			#pamixer -d 3
			amixer -D pulse sset Master 3%-
	    else
			#pamixer -d $2
			amixer -D pulse sset Master "${$2}%-"
	    fi
	    print_sound
	    ;;
	mute)
	    amixer sset Master mute
	    amixer set  Master 0%

	    pamixer -m
	    pamixer --set-volume 0
	    print_sound
	    ;;
	unmute)
	    amixer sset Master unmute
	    amixer set  Master 0%

	    pamixer -u
	    pamixer --set-volume 0
	    print_sound
	    ;;

	*)
	    echo "Not a command (info|inc|dec|mute|unmute)"
	    exit 1
	    ;;
    esac
}

cmd=$(echo "$@"| awk '{print $1}')
opt=$(echo "$@"| awk '{$1=""; print}')

case $cmd in
    "")
	echo "
toggle
next
prev
info
stop
"| sed '/^$/d'
	;;
    info)
	print_track "$(mpc status | head -n1)"
	# tunes
        ;;
    toggle)
        print_track "$(mpc toggle | head -n1)"
	# tunes
        ;;
    next)
        print_track "$(mpc next | head -n1)"
	# tunes
        ;;
    prev)
        print_track "$(mpc prev | head -n1)"
	# tunes
        ;;
    stop)
        mpc stop
	# tunes
        ;;
    vol)
        case $opt in
	    "")
		echo "
info
inc
dec
mute
unmute
"| sed '/^$/d'
		;;
	    *)
		vol $opt #> /dev/null 2>&1
		exit 0
		;;
        esac
        ;;
    *)
        exit 1
        ;;
esac
